<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="interface-suite.xml" />
	<munit:test name="walmart-api-main-success" doc:id="1c10a0b4-43cc-46c1-b54e-5ab63481f852" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="6e98bf68-2bd7-4f07-b680-38d6c0da1e87" >
				<munit:payload value="#[readUrl('classpath://walmartapimainsuccess/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://walmartapimainsuccess/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to walmart-api-main" doc:id="531e36f1-e302-4161-8d08-e721055358d5" name="walmart-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a9e3b013-dfbc-46a2-9d56-749c08a97856" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import walmartapimainsuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify APIkit Router" doc:id="a2fa980d-0a0a-4b13-9e64-fa13454938d1" processor="apikit:router" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\order:walmart-api-config-success" doc:id="a1232cc6-32b4-43ab-8d4a-e07a7a4a64ec" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="744412ae-cf13-45d2-9e14-1e88f148a499" >
				<munit:payload value="#[readUrl('classpath://getorderwalmartapiconfigsuccess/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getorderwalmartapiconfigsuccess/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getorderwalmartapiconfigsuccess/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\order:walmart-api-config" doc:id="b909bf22-5623-405a-95cb-8ac5372a4d91" name="get:\order:walmart-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="80066c28-3502-44ef-a949-2c7a6c52fc1b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getorderwalmartapiconfigsuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Flow Reference" doc:id="5e0dce4b-642b-4178-9013-d2fcd16f924f" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e21ef3e9-7281-43b8-b297-32b35dab46ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="walmart-api-console-success" doc:id="c2356c5e-bd50-4baa-b407-99ff098362c9" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="1bcc9087-f885-46a5-98cb-3df9fe2ebad9" >
				<munit:payload value="#[readUrl('classpath://walmartapiconsolesuccess/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://walmartapiconsolesuccess/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to walmart-api-console" doc:id="dfb92782-e0bf-40a3-a6c3-d7832fa07893" name="walmart-api-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="85c1593a-53c9-4811-986e-1d16db0d6c3e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import walmartapiconsolesuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify APIkit Console" doc:id="eb8c4b35-ac61-414a-8a87-dd8ab5eb426b" processor="apikit:console" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="dd9b52d8-d5cf-4326-97ab-3d5c25414184" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
<munit:test name="apiRouter-APIKIT_BAD_REQUEST" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:router">
            <munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-main" doc:id="f632a42b-48f1-4dc0-84d7-06cc3546d94a" doc:name="walmart-api-main"/>
            <error-handler >
                <on-error-continue type="APIKIT:BAD_REQUEST" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="a51958cc-f55b-4c52-8241-d33864162133" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="982c8de0-7b50-44d0-b462-82dcbe3822d4" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(400)]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
<munit:test name="apiRouter-APIKIT_NOT_FOUND" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-main" doc:id="7d87f13d-890a-4c98-9f96-376b022bcbda" doc:name="walmart-api-main"/>
            <error-handler >
                <on-error-continue type="APIKIT:NOT_FOUND" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="ac19b818-ba17-4684-9c3e-d43b29eb0636" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="285f3374-2bf1-4db4-8c84-c34d73af8644" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(404)]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
<munit:test name="apiRouter-APIKIT_METHOD_NOT_ALLOWED" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:router">
            <munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-main" doc:id="14f121dd-be30-4159-b558-ccff93cdb7a2" doc:name="walmart-api-main"/>
            <error-handler >
                <on-error-continue type="APIKIT:METHOD_NOT_ALLOWED" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="cf2092f5-10dc-489a-9a0d-f2f68a3d5e69" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="ca62dd0c-1c06-4b75-9df1-7bae25908c41" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(405)]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
<munit:test name="apiRouter-APIKIT_NOT_ACCEPTABLE" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:router">
            <munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-main" doc:id="b2e97b4b-1437-4869-aa2f-7765af24a5d3" doc:name="walmart-api-main"/>
            <error-handler >
                <on-error-continue type="APIKIT:NOT_ACCEPTABLE" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="6ffd5adb-7fba-4579-8106-d1f7466d3477" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="83121117-3b70-4065-b06c-38bf210c37ce" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(406)]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
<munit:test name="apiRouter-APIKIT_UNSUPPORTED_MEDIA_TYPE" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:router">
            <munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-main" doc:id="c3bf3639-36f8-4507-86c4-81252456ec58" doc:name="walmart-api-main"/>
            <error-handler >
                <on-error-continue type="APIKIT:UNSUPPORTED_MEDIA_TYPE" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="681f10d7-07f3-4d22-8044-729a2cf540af" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="2b804c2f-134c-4049-8d06-6f528536bf11" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(415)]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
<munit:test name="apiRouter-APIKIT_NOT_IMPLEMENTED" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:router">
            <munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="f73a10b7-d91d-409b-a41a-f38408b06562" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-main" doc:id="b96251f4-b634-4f95-a941-5cc00f0b6371" doc:name="walmart-api-main"/>
            <error-handler >
                <on-error-continue type="APIKIT:NOT_IMPLEMENTED" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="e387464f-c4f1-4e77-81d8-b20875f57bf7" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="e31438da-c38b-468e-b09f-7cd881d25962" is="#[MunitTools::equalTo(501)]" expression="#[vars.httpStatus]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
<munit:test name="apiConsole-APIKIT_NOT_FOUND" description="Mock CONNECTIVITY error" >
    <munit:behavior >
        <munit-tools:mock-when processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="walmart-api-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="dd9b52d8-d5cf-4326-97ab-3d5c25414184" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
        </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution >
        <try>
            <flow-ref name="walmart-api-console" doc:id="1db31670-0ea1-4dd9-9b8a-095dded582cf" doc:name="walmart-api-console"/>
            <error-handler >
                <on-error-continue type="APIKIT:NOT_FOUND" enableNotifications="true" logException="true">
						<logger level="INFO" doc:name="Continue" doc:id="ae517c71-4505-4789-bc6f-9c53068b141f" message="Continue..."/>
					</on-error-continue>
            </error-handler>
        </try>
    </munit:execution>
    <munit:validation >
        <munit-tools:assert-that doc:name="Assert that" doc:id="a5a5a6d5-035e-420b-882b-0452a9f7f01e" is="#[MunitTools::equalTo(404)]" expression="#[vars.httpStatus]"/>
			<munit-tools:verify-call processor="mule:logger"/>
    </munit:validation>
</munit:test>
</mule>
